events {
    work    # SSL configuration
    server {
        listen 443 ssl http2;
        server_name eddiemuhoro.me www.eddiemuhoro.me;

        ssl_certificate /etc/letsencrypt/live/eddiemuhoro.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/eddiemuhoro.me/privkey.pem;

        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        location / {
            proxy_pass http://nextjs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

http {
    upstream nextjs {
        server nextjs-portfolio:3000;
    }

    server {
        listen 80;
        server_name eddiemuhoro.me www.eddiemuhoro.me;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # SSL configuration (uncomment and configure if you have SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name eddiemuhoro.me www.eddiemuhoro.me;
    #
    #     ssl_certificate /etc/nginx/ssl/your-domain.crt;
    #     ssl_certificate_key /etc/nginx/ssl/your-domain.key;
    #
    #     location / {
    #         proxy_pass http://nextjs;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
}
